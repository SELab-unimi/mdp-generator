grammar it.unimi.di.se.mdp.MdpDsl with org.eclipse.xtext.common.Terminals

generate mdpDsl "http://www.unimi.it/di/se/mdp/MdpDsl"

MDPModel:
    'model' name=STRING
    'actions' actions += Action*
    'states' states += State*
    'arcs' arcs += Arc*
    'observe' observableActions += ObservableMap*
    'control' controllableActions += ControllableMap*
    'reset' resetActions += ResetEvent*;
  
Action:
	name=ID;  

State:
	name=ID '{' Label += AtomicProposition* '}' initial?=('initial')? Prior += DirichletPrior*;

AtomicProposition:
	name=ID;
	
DirichletPrior:
	'Dir' '~' '(' act=[Action] ',' concentration += ConcentrationParam+ ')';
	
ConcentrationParam:
	'<' dst=[State] ',' alpha=DECIMAL '>';
	
Arc:
	name=ID ':' '(' src=[State] ',' act=[Action]')' '->' dst=[State] ',' probability=DECIMAL;

Arg:
	name=ID ':' type=STRING;

ObservableMap:
	arc=[Arc] '->' type=ActionType when=When signature=STRING (',' 'args' '{' Arguments += Arg+ '}')? (',' 'argsCondition' argsCondition=STRING)? (',' precondition=Precondition)? (',' postcondition=Postcondition)?;
	
Precondition:
	'precondition' expression=STRING;
	
Postcondition:
	'postcondition' expression=STRING 'returnType' returnType=ID;


When:
	'before' | 'after';

ActionType:
	'observable' | 'controllable';

ControllableMap:
	state=[State] '->' signature=STRING ',' 'args' '{' Arguments += Arg+ '}'; // it assumes presence the of one java.io.InputStream argument

ResetEvent:
	signature=STRING (',' 'args' '{' Arguments += Arg+ '}')? (',' 'argsCondition' argsCondition=STRING)?;

terminal DECIMAL: INT '.' INT;
